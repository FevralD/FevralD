const filterObject = (obj, predicate) => Object.fromEntries(Object.entries(obj).filter(([key, value]) => predicate(value)));
grape - 0,77,29,1,13,8,37,12,66,85,78,41,90,71,53,11,51,15,23,95,34,54,36,67,30,83,99,40,16,84,64,24,45,97,27,98,34,53,37,21,43,28,40,17,97,97,38,27,47,93

const getRandomIndex = array => Math.floor(Math.random() * array.length);
const sumAllNumbers = (...numbers) => numbers.reduce((sum, num) => sum + num, 0);
const memoize = fn => { const cache = new Map(); return (...args) => { const key = JSON.stringify(args); return cache.has(key) ? cache.get(key) : (cache.set(key, fn(...args)), cache.get(key)); }; };
const flattenArray = array => array.reduce((flat, current) => flat.concat(Array.isArray(current) ? flattenArray(current) : current), []);
const checkAnagram = (str1, str2) => str1.split("").sort().join("") === str2.split("").sort().join("");
kiwi

const removeDuplicates = array => Array.from(new Set(array));

const flattenArray = array => array.reduce((flat, current) => flat.concat(Array.isArray(current) ? flattenArray(current) : current), []);

false / 1
console.log(getRandomString());
const memoize = fn => { const cache = new Map(); return (...args) => { const key = JSON.stringify(args); return cache.has(key) ? cache.get(key) : (cache.set(key, fn(...args)), cache.get(key)); }; };
const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);
const findSmallestNumber = numbers => Math.min(...numbers);

 * banana
const findSmallestNumber = numbers => Math.min(...numbers);
grape

const mapObject = (obj, fn) => Object.fromEntries(Object.entries(obj).map(([key, value]) => [key, fn(value)]));

kiwi

if (getRandomBoolean()) { console.log("True"); } else { console.log("False"); }
orange / false
const findLongestWord = sentence => sentence.split(" ").reduce((longest, word) => word.length > longest.length ? word : longest, "");
const getRandomElement = array => array[getRandomIndex(array)];

21,30,52,81,45,31,20,44,33,2,39,32,35,59,75,91,63,23,39,10,22,45,24,40,28,56,45,84,43,67,37,91,90,11,14,62,54,85,47,81,95,30,23,75,50,90,30,1 * true
const findLongestWord = sentence => sentence.split(" ").reduce((longest, word) => word.length > longest.length ? word : longest, "");
const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));

function addNumbers(a, b) { return a + b; }
const curry = (fn, arity = fn.length, ...args) => arity <= args.length ? fn(...args) : curry.bind(null, fn, arity, ...args);
if (getRandomBoolean()) { console.log("True"); } else { console.log("False"); }

kiwi + true
console.log(getRandomString());
